{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","state","name","number","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","resetForm","this","className","s","form","autoComplete","label","input","type","onChange","btn","disabled","Component","ContactListItem","id","deleteContact","item","delete","onClick","ContactList","contacts","list","map","Filter","filter","App","addContact","contact","uuidv4","some","alert","contactId","prevState","changeFilter","findContact","normalize","toLowerCase","includes","existedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filtredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"2RA2DeA,E,4MAvDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAEVC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAiBD,EAAEE,cAAcL,KAAOG,EAAEE,cAAcC,S,EAE1DC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,a,EAEPA,UAAY,WACV,EAAKP,SAAS,CAAEJ,KAAM,GAAIC,OAAQ,M,uDAE1B,IAAD,EACkBW,KAAKb,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,mCACE,uBACEY,UAAWC,IAAEC,KACbC,aAAa,MACbN,SAAUE,KAAKL,aAHjB,UAKE,wBAAOM,UAAWC,IAAEG,MAApB,UACG,IADH,OAGE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLnB,KAAK,OACLM,MAAON,EACPoB,SAAUR,KAAKV,kBAGnB,wBAAOW,UAAWC,IAAEG,MAApB,UACG,IADH,QAGE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,MACLnB,KAAK,SACLM,MAAOL,EACPmB,SAAUR,KAAKV,kBAGnB,yBAAQW,UAAWC,IAAEO,IAAKF,KAAK,SAASG,UAAWtB,EAAnD,UACG,IADH,0B,GA/CgBuB,a,gBCyBXC,EAxBS,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,GAAIzB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,OAAQyB,EAAoB,EAApBA,cAC3C,OACE,qBAAIb,UAAWC,IAAEa,KAAjB,UACG,IACA3B,EAFH,KAEWC,EACT,wBACEY,UAAWC,IAAEc,OACbT,KAAK,SACLU,QAAS,WACPH,EAAcD,IAJlB,wBCiBSK,EArBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUL,EAAoB,EAApBA,cAC/B,OACE,oBAAIb,UAAWC,IAAEkB,KAAjB,SACGD,EAASE,KAAI,gBAAGR,EAAH,EAAGA,GAAIzB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEED,KAAMA,EACNC,OAAQA,EACRwB,GAAIA,EACJC,cAAeA,GAJVD,S,gBCKAS,EAXA,SAAC,GAAD,IAAG5B,EAAH,EAAGA,MAAOc,EAAV,EAAUA,SAAV,OACb,wBAAOP,UAAWC,IAAEqB,OAApB,kCAEE,uBAAOtB,UAAWC,IAAEI,MAAOC,KAAK,OAAOb,MAAOA,EAAOc,SAAUA,Q,QCiEpDgB,E,4MAjEbrC,MAAQ,CACNgC,SAAU,GAMVI,OAAQ,I,EAaVE,WAAa,YAAuB,IAApBrC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACdqC,EAAU,CACdb,GAAIc,cACJvC,OACAC,UAKF,GAHkB,EAAKF,MAAMgC,SAASS,MACpC,SAAAb,GAAI,OAAIA,EAAK3B,OAASsC,EAAQtC,QAEjB,OAAOyC,MAAM,GAAD,OAAIH,EAAQtC,KAAZ,2BAC3B,EAAKI,UAAS,gBAAG2B,EAAH,EAAGA,SAAH,MAAmB,CAAEA,SAAS,CAAEO,GAAH,mBAAeP,S,EAE5DL,cAAgB,SAAAgB,GACd,EAAKtC,UAAS,SAAAuC,GAAS,MAAK,CAC1BZ,SAAUY,EAAUZ,SAASI,QAAO,SAAAG,GAAO,OAAIA,EAAQb,KAAOiB,U,EAGlEE,aAAe,SAAAzC,GACb,EAAKC,SAAS,CAAE+B,OAAQhC,EAAEE,cAAcC,S,EAE1CuC,YAAc,WAAO,IAAD,EACW,EAAK9C,MAA1BgC,EADU,EACVA,SACFe,EAFY,EACAX,OACOY,cACzB,OAAOhB,EAASI,QAAO,SAAAG,GAAO,OAC5BA,EAAQtC,KAAK+C,cAAcC,SAASF,O,kEAlCtC,IAAMG,EAAkBC,aAAaC,QAAQ,YACzCF,GACFrC,KAAKR,SAAS,CAAE2B,SAAUqB,KAAKC,MAAMJ,O,yCAGtBK,EAAWX,GACxBA,EAAUZ,WAAanB,KAAKb,MAAMgC,UACpCmB,aAAaK,QAAQ,WAAYH,KAAKI,UAAU5C,KAAKb,MAAMgC,a,+BA8BrD,IACAI,EAAWvB,KAAKb,MAAhBoC,OACFsB,EAAkB7C,KAAKiC,cAC7B,OACE,gCACE,2CACA,cAAC,EAAD,CAAanC,SAAUE,KAAKyB,aAC5B,0CACA,cAAC,EAAD,CAAQ/B,MAAO6B,EAAQf,SAAUR,KAAKgC,eACtC,cAAC,EAAD,CACEb,SAAU0B,EACV/B,cAAed,KAAKc,uB,GA3DZH,aCDlBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA/HD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,kBCA5DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.071fe6b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form\n          className={s.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <label className={s.label}>\n            {' '}\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            {' '}\n            Phone\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\" disabled={!name}>\n            {' '}\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      {' '}\n      {name}: {number}\n      <button\n        className={s.delete}\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from './ContactListItem';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          id={id}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const existedContacts = localStorage.getItem('contacts');\n    if (existedContacts) {\n      this.setState({ contacts: JSON.parse(existedContacts) });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const duplicate = this.state.contacts.some(\n      item => item.name === contact.name,\n    );\n    if (duplicate) return alert(`${contact.name} is alredy in contacts`);\n    this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  findContact = () => {\n    const { contacts, filter } = this.state;\n    const normalize = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalize),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n    const filtredContacts = this.findContact();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filtredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"delete\":\"ContactList_delete__3bnVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};"],"sourceRoot":""}